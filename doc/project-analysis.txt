Proposed XBASIC Introduction and Problem Logging Website

Contents
	Introduction
	Project Aims
	Gathering Requirements and Solutions
	Course Tool Requirements
	Users and Requirements
		User Stories and Requirements
			Header
			Administration Editor
		Summary of Features to Meet Requirements
	Budgetary Constraints
	Feasibility and Initial Design Layouts
	Desirable Features
	Scope Calculations

## Introduction
	02/04/2023
		Project re-drafted to allow for Django MVT development to meet course requirements.

		 
## Project Aims

	To provide an introduction and support system for potential and
	existing users of the XBasic programming language.

	To meet the requirements of the CI Full Stack Development Diploma
	Project 4. See: project-requirements.txt

## Gathering Requirements and Solutions

	Although this document currently includes assumed requirements
	based on the author's experience, it would be beneficial to
	perform an Agile UCD type of approach to provide an additional/
	alternative set.

	To this end a survey has been sent to the XBasic User's group 
	to gather information on additional requirements.

	The ideation session could conceivably be carried-out with
	members of this group or possibly on slack to get a slightly
	wider perspective.

## Course Tool Requirements

	Project Management and recording should be set-up and
	followed in Agile-type style (staging) on GitHub Issues/Projects
	with requirements/user stories drawn from initial analysis 
	in this document.

	Wireframe layouts should be drafted inkscape and saved as svg's.

	The page layouts should be done with HTML Bootstrap 4.6

	The site will use the Django MVT framework for its templates, python views and data models.
	Databasing will be handled by PostgreSQL.

	Hosting for the application will be on Heroku and of the database ElephantSQL.
	Images will be hosted on Cloudinary.

	The development gitpod site will be set-up to use the Heroku platform from the start
	with the DEBUG status set to True.


## Users and Requirements

	It is anticipated that the site would be visited by the following
	types of user:

		People with Windows or Linux systems that are new to 
		programming who are looking for a programming
		language that is fully-featured but easy to learn.

		Existing programmers who are looking for a rapid development
		system for interactive and command-line utilities that can 
		run on Linux and Windows with easy debugging features.

		Existing programmers who are looking for a straight-forward
		way to build standalone GUI applications for Linux and/or
		Windows.

		Existing XBasic users who need additional look-up facilities
		and a forum for discussing problems and reporting errors.

		Some users may be using a mobile phone or tablet to quickly
		reference programming languages

## User Stories and Requirements

	The envisioned user roles are:
		User
			New Programmer
			Existing Programmer
				Utility Programmer
				Application Programmer
			Administrator

### Epic: Header

	As a user I can see a clearly defined brand in order to recognize this site and product

		Acceptance Criteria

			The XBasic brand and a logo should appear at the top of each page

	As a user I should be able to easily navigate between pages

		Acceptance Criteria

			A set of page links should be presented toward the top of the page

### Administration Editor
	Epic: As an administrator I can enter or edit or delete text for the xbasic promo pages in order to inform 
	readers of XB features

	As an administrator I can associate an image with the text for the feature page in order to provide readers 
		with visual examples

	As an adminstrator I can use text styling features in the text for the feature pages

		We can use the Summernotes editor to provide these features

#### Implementation Notes
	These features are to be performed using the Django admin pages as exampled in the django-blog

#### Data Models 
	Each of the feature pages can have many feature sections, so the data models are as follows:

	Feature Page

	Field           Type             Other Aspects
	page_name       Char(32)         unique
	page_title		Char(80)
	slug            SlugField(40)	 from page title
	page_intro      TextField        Maybe null
	excerpt         Char(80)         Maybe null, excerpt from page intro
	intro_image		CloudinaryImage

	Feature Section  

	Field           Type             Other Aspects
	title           Char(80)         unique
	section_number	Integer			 unique - for ordering
	feature_page	ForeignKey       from feature_page
	article			TextField
	excerpt			Char(80) 		 Text excerpt from body
	feature_image   CloudinaryImage  can be null

#### Feature Page Layouts

	The feature pages are built from data models above and the base template.

	A page introduction may or may not be included. Where it is a background image is used.

	Feature sections are layed-out in 5 column image 7 column text arrangement, with the 
	text and image alternating sides, full width on small screens. Where the image is
	absent, the text occupies the full width.

### Epic: Site Introduction

	As user I can read briefly about the intentions of the site in order to understand the site

		Acceptance Criteria

			There is an introductory panel describing the site

### Epic: Introduction to PDE and XBasic

	As a new or existing programmer I can read a brief desciption of the 
	XBasic PDE and Language in order to get an overview.

		Acceptance Criteria

			The opening page has a brief description of the XBasic system.

			There is a screenshot of the PDE and console on the opening page

			There is a screenshot example of some code which has been run

	As a user I can read about the operational platforms for XBasic in order
	to assess its suitability

		Acceptance Criteria

			It should be clear what environments the language will operate in

	As a user I can find some code examples in order to learn the language

		Acceptance Criteria

			In the language summary reference to the code examples provided with the download

	As a utility programmer I need to know what file processing and database handling features/facilities there are
	in order to establish that XBasic is suitable for my needs

		Acceptance Criteria
			
			There is a description of file handling capabilities

			There is a description of database handling capabilities

	As an application programmer I need to know briefly about GUI capabilities in order to assess the
	suitability of the program

		Acceptance Criteria

			There is a brief description of the GUI toolkit

### Epic: Language Features

	As a user I can read a summary description of language features in order to gain more insight

		Acceptance Criteria

			On a separate page there is a summary description of key language features

			The description has associated screenshots

### Epic: Built-in Functions

	Feature: Built-in Functions

	As I user I can read about built-in functions in order to gain more insight into language features

		Acceptance Criteria

			On a separate page there is a summary description of built-in functions

	Feature: Debugging Features

	As a user I can read a description of debugging features in order to know about ease of coding

		Acceptance Criteria

			On a separate page there is a summary description of debugging features

			Debugging description is supported by screenshots

### Epic: Footer

	As a user I can have access to a detailed description of the language in order to gain a detailed insight

		Acceptance Criteria

			There is a link in the footer to the XBasic manual

	As a user I can download XBasic in order to use it

		Acceptance Criteria
		
			Links to the sourceforge and github sites in the footer with text

	As a user I can connect to other users in order to discuss issues

		Links to the groups.io and sourceforge sites


### Epic: GUI Toolkit

	As an existing programmer I can refer to a description of the GUI toolkit in order to determine
	whether XBasic is suitable for my requirements

		Acceptance Criteria

			GUI toolkit description and screenshots on own page


### Epic: As a user I can discuss XBasic Issues with others in order to fix my code or learn how to do something

		Error and problem discussion page/database


	As a user I can enter a description of my issue in order to receive advice/answers

		Acceptance Criteria

			On the problems page there is an add issue button

			When the user clicks on the add issue button a form area is presented, ready to enter text into 

	As a user I can enter a title for an issue in order for myself and others to find it

		Acceptance Criteria

			When the Add Issue button is clicked, the user is first required to enter a title

	As a user I can enter keywords for my issue so that it can be searched for later

		Acceptance Criteria

			When the user clicks the Add Issue button, he is presented with a keywords field
			along with the other fields.

			The keywords field is supported by explanatory text

	As a user I can more clearly explain my issue with a screenshot/s in order to communicate the issue

		Acceptance Criteria

			The issue entry layout includes a feature to drag and drop an image/s

			Images are recorded along with the issue description

	As a user I can search for issues previously raised in order to find something like my own

		Acceptance Criteria

			By default, the problem page presents the most recent issue

			Issues can be scrolled through in date order

			The problem page has a search input field at the top

			The search is conducted by username, title or keywords

			Where there is more than one match, the issues can be scrolled through in date order

			After a search the number of matches is displayed

	As a user I can scroll through the replies to an issue in date order in order to 
	find an appropriate response.

		Acceptance Criteria

			There are scroll-up and scroll down buttons on the reply area

	As an Owner/Administrator I can edit issues so that they conform to standards

		Acceptance Criteria

			If the user is an owner/administrator an edit button appears on an issue

			Clicking the edit button enables editing of the current issue

			When the edit button is clicked a submit button appears in the issue area

	As an Owner/Administrator I can edit replies so that they conform to standards

			If the user is an owner/administrator an edit button appears on a reply

			Clicking the edit button enables editing of the current reply

			When the edit button is clicked a submit button appears in the reply area

### Epic: As a user I can enter a reply to an issue in order to inform/assist another user

		Acceptance Criteria

			There is a reply button on the issues area, which raises a reply entry form
			on the issues page

			The layout of the reply form is very similar to the issue form


### Epic: As a new user I can register myself in order to be known to the XBasic community

	As a new user I can register my email address in order to receive XBasic mailings

		Acceptance Criteria

			Registration allows for valid email address

			Email address is confirmed as valid by use of a link from an email

	As a new user I can register a unique username in order to be known to other users and to recognise my own texts

		Acceptance Criteria

			Username is checked for conformity to standard alphanumeric

			Username is checked as unique

	As a new user I can securely identify myself by the use of a password in order to login 

		Acceptance Criteria

			Registration allows for password

			Password is entered twice to allow for checking

### Epic: As an owner I can set-up admin details for administrators/owners to be able to edit issues and replies

		Acceptance Criteria

			An owner has reserved access to a page for entering administrator/admin details

		As an owner, I should be able to see a list of existing owner/administrators for editing

			Acceptance Criteria

				The owner/administrator page has a scrollable list of entries

				Clicking on an entry enables the delete option

		As an owner I can enter a name for an owner/administrator in order to 
		identify the administrator

			Acceptance Criteria
			
				The user admin page has an Add New Admin button that brings-up an editable
				form

				The user admin page has a name field for entering an owner/administrator's name

				The name should be validated as all alphabetic

		As an owner I can enter an email address for the owner/administrator in order to be able to
		send appropriate login details

			Acceptance Criteria

				The email address should be validated in the same way as for user registration

		As an owner I can indicate whether a user is admin or owner in order to
		give them appropriate permissions 

			Acceptance Criteria

				There are radio buttons for the owner/administrator being updated

		As an owner I can delete an entry for an owner/administrator in order to 
		suspend/remove an owner/admin

### Other Considerations
	Mobile Phone User:
		As a mobile phone user I can read the material supported by screenshots in order to compensate for
		small screenshots

		Acceptance Criteria
		
			The texts are sufficiently detailed to explain the screenshots


### Summary of Features to meet Requirements

	Site Introduction
	Introduction to XBasic and PDE
	Introduction to GUI toolkit
	Introduction to Language Features
	Introduction to Built-in Functions
	Introduction to Debugging Features
	Provide Links to other XBasic sites, including link to documentation at xbwlteam/xb-manual
	Allow general user to create account to open problem chat
	User Registration
	Allow admin user to modify problem texts
	Allow admin supervisors (owners) to appoint admin staff as well as modify
		problem file entries
	Entry of user problems/issues
	Entry of user responses

### Pages / Menu

	Main Page - index.html
	GUI Toolkit - gui-design.html
	Language Features - features.html
	Built-in Functions - functions.html
	Debugging Features - debugging.html
	Problems/Issues - issues.html
	Sign-In/Sign-Up - pop-up?
	Home

## Budgetary Constraints

	Because of the course-work associated with the module of which this project 
	is a part, we can allocate 6 man weeks to this project and this sets a limit
	on the work which can be done in practice.

	The project plan should be reviewed after 1 month of study, ie: About 5th Jan 2023

## Feasibility and Initial Design Layouts

	See also: Design Layouts in doc/wireframes (rendered in INKSCAPE svg format)

	Since the primary aim is publicise XBasic, the initial design layout should
	be for the title-bar, menu, site introduction and general introduction to PDE
	which items appear on the main page.

	Of primary importance is to see whether the XBasic PDE image is satisfactory for
	mobiles. see: test-code/test-mobile-image-01.html. Initial trial seems reasonably
	satisfactory.

	Check-out the use of iframes - can they use nested code or do they have to use
	separate web pages? Instead Iframes use scrollable divs, this can be established
	by setting the style properties overflow-y: auto and overflow-x: auto. This allows
	the scrollable area to contain the page code.

	Check-out text areas - can the entered text exceed the size of the visible area?
	A scroll bar appears when the text is longer than the displayed area height.
	Use styles white-space: nowrap and white-space: pre to obtain wrap-free text with
	a horizontal scrollbar. This would be better for code listings.

	Check-out uploading an image file for immediate display see: jquery/django.

## Desirable Features

	Introduction to Site
	Introduction to XBasic and PDE
	Introduction to GUI toolkit
	Introduction to Language Features
	Introduction to Debugging Features
	Introduction to Functions
	Provide Links to other XBasic sites, including link to documentation at xbwlteam/xb-manual
	Allow general user to create account to open problem chat
	User Registration
	Allow admin user to modify helpfile entries
	Allow admin supervisors (owners) to appoint admin staff as well as modify
		problem file entries
	Entry of user problems
	Entry of user responses


### Introduction to Site
	This appears on the main page, one paragraph

	0.1 Man Days

### Introduction to XBasic and PDE
	This appears on the main page, two or three paragraphs + picture

	0.5 Man Days

	Includes picture and description of the form design toolbox

	0.5 Man Days

### Introduction to Language Features
	This appears on a separate page with menu link

	2 Man Days

### Introduction to Built-in Functions
	This appears on a separate page with menu link

	2 Man Days

### Introduction to Debugging Features

	2 Man Days

### Introduction to GUI toolkit
	This appears on a separate page linked via the menu

	3 Man Days

### General User Sign-In/Up
	This appears in a modal pop-up when the menu link or button is
	clicked. Gives the option to sign-up.

	The sign-in option detects whether the user is a site owner/site admin
	or general user.

	Frontend: 1 Man Days
	Backend : 0.5 Man Days

	New Registration
	Frontend: 1 Man Days
	Backend: 0.5 Man Days

	Allocate Admin Staff - available to Owners only
	Frontend: 1 Man Days
	Backend: 0.5 Man Days

### Search Problems and Answers
	The problems & and answers page is separate and has a menu link

	Frontend: 0.2 Man Days
	Backend: 2 Man Days

### Submit Problem
	Frontend: 2 Man Days
	Backend: 0.5 Man Days

### Submit Answers
	Frontend: 2 Man Days
	Backend: 0.5 Man Days

## Initial Scope Calculations/Feasibility

	Redrafted 02/04/2023

	Project Component				Man Days	Priority	Actual
	Planning and Analysis				8			1
	Set-up of XB Doc Pages				1			2			0.2
	Favicon								0.5			2			0.2
	Logo / Title						0.5			1			0.5
	Menues								1			1			
	Footer Links						0.5			2			1
	Introduction to Site				0.5			1			0.5
	Introduction to XBasic & PDE		1			1			
	Introduction to GUI Design			2			2
	Introduction to Language Features	2			2
	Introduction to Functions			2			2
	Introduction to Debugging Features	2			2

	General User sign-in/registration   2			1

	                        Sub-Total   21

	The following will only be executed if there is sufficient time once the features are done
	Search Problems and Answers			3    		3
	Submit Problem						4.5			3
	Submit Answers						2.5			3
	Edit Problems/Answers				4			3
                             Sub Total  14
	Totals								35

	The available time is 42 man days.
	We need the problems and answers sections to meet the CI requirements. So
	this and the associated user registration should be worked on first.

	If necessary we could suspend the Introduction to Language Features and 
	Introduction to Functions pages as these topics are covered in the linked 
	XBasic Manual. So this could be done last.

	Systems testing and reporting would be about 8 Man Days (1/4)

	Allowing one week for other matters the latest the project could begin is 60 man days
	before the CI deadline, that is March 15 2023.

	In practice it can begin earlier than this as the necessary course material is
	completed.
